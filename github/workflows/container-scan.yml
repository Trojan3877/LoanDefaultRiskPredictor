name: Container-Security-Scan

on:
  push:
    branches: [main]
    paths: ["Dockerfile", ".github/workflows/container-scan.yml"]
  schedule:
    - cron: "0 2 * * 1"        # Mondays 02:00 UTC
  workflow_dispatch: {}

jobs:
  trivy:
    runs-on: ubuntu-latest
    steps:
      - name: ðŸ“¥ Checkout
        uses: actions/checkout@v4

      # â”€â”€ Build container image for scanning â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: ðŸ”¨ Build image
        run: docker build -t loanrisk-scan:ci .

      # â”€â”€ Run Trivy vulnerability scan (fails CI on HIGH/CRITICAL) â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: ðŸ”Ž Trivy vuln scan
        uses: aquasecurity/trivy-action@0.16.0
        with:
          image-ref: loanrisk-scan:ci
          format: table
          exit-code: 1
          ignore-unfixed: true
          severity: CRITICAL,HIGH

      # â”€â”€ Generate SPDX SBOM and upload artifact â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
      - name: ðŸ“œ SBOM (SPDX)
        uses: aquasecurity/trivy-action@0.16.0
        with:
          image-ref: loanrisk-scan:ci
          format: spdx-json
          output: sbom.spdx.json

      - name: ðŸ“¤ Upload SBOM
        uses: actions/upload-artifact@v3
        with:
          name: SBOM
          path: sbom.spdx.json
